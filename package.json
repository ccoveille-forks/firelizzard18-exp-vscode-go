{
  "name": "exp-vscode-go",
  "publisher": "ethan-reesor",
  "displayName": "Golang Experimental",
  "description": "Experimental Golang VSCode features",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:go",
    "onView:workbench.view.testing"
  ],
  "main": "./dist/extension.js",
  "extensionDependencies": [
    "golang.go"
  ],
  "contributes": {
    "configuration": {
      "title": "Go (experimental)",
      "properties": {
        "goExp.testExplorer.enable": {
          "type": "boolean",
          "default": true,
          "scope": "window",
          "description": "Enable the Go test explorer"
        },
        "goExp.testExplorer.exclude": {
          "type": "object",
          "default": {},
          "description": "Exclude directories and/or files from the test explorer. The value of `go.testExplorer.exclude` is merged with `files.exclude`. `go.testExplorer.exclude` takes precedence if an entry appears in both. If `files.exclude` contains `\"examples\": true` and `go.testExplorer.exclude` contains `\"examples\": false`, the latter will take precedence - matching entries will be excluded from the file explorer but included in the test explorer. Otherwise if either `go.testExplorer.exclude` or `files.exclude` contains an entry with a value of `true`, tests and/or packages matching that entry will be excluded from the test explorer.",
          "scope": "resource",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "goExp.testExplorer.discovery": {
          "type": "string",
          "default": "on",
          "enum": [
            "on",
            "off"
          ],
          "scope": "resource",
          "description": "Control automatic discovery of tests"
        },
        "goExp.testExplorer.showFiles": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Show files"
        },
        "goExp.testExplorer.nestPackages": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Nest packages"
        },
        "goExp.testExplorer.nestSubtests": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Nest subtests"
        },
        "goExp.testExplorer.codeLens": {
          "type": "string",
          "enum": [
            "on",
            "off",
            "debug",
            "run"
          ],
          "default": "off",
          "scope": "resource",
          "description": "Show code lenses for running and debugging tests"
        },
        "goExp.testExplorer.dynamicSubtestLimit": {
          "type": "integer",
          "default": 50,
          "scope": "resource",
          "description": "Limits the number of subtests that are included in the test explorer. Set to 0 to include all subtests."
        },
        "goExp.testExplorer.runPackageBenchmarks": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "When the test explorer is used to run all tests within a package, include benchmarks"
        }
      }
    },
    "customEditors": [
      {
        "viewType": "goExp.profile",
        "displayName": "Go Profile",
        "selector": [
          {
            "filenamePattern": "*.pprof"
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "goExp.testExplorer.refresh",
        "title": "Go: Refresh Test",
        "description": "Refresh a test in the test explorer. Only available as a context menu option in the test explorer.",
        "category": "Test",
        "icon": "$(refresh)"
      },
      {
        "command": "goExp.test.run",
        "title": "Go: Run Test",
        "category": "Test"
      },
      {
        "command": "goExp.test.debug",
        "title": "Go: Debug Test",
        "category": "Test"
      },
      {
        "command": "goExp.openProfile",
        "title": "Go: Open profile",
        "description": "Open a pprof file"
      },
      {
        "command": "goExp.browser.back",
        "title": "Back",
        "icon": "$(arrow-left)"
      },
      {
        "command": "goExp.browser.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "goExp.browser.forward",
        "title": "Forward",
        "icon": "$(arrow-right)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "goExp.testExplorer.refresh",
          "when": "false"
        },
        {
          "command": "goExp.test.run",
          "when": "false"
        },
        {
          "command": "goExp.test.debug",
          "when": "false"
        },
        {
          "command": "goExp.openProfile",
          "when": "false"
        },
        {
          "command": "goExp.browser.back",
          "when": "false"
        },
        {
          "command": "goExp.browser.refresh",
          "when": "false"
        },
        {
          "command": "goExp.browser.forward",
          "when": "false"
        }
      ],
      "testing/item/context": [
        {
          "command": "goExp.testExplorer.refresh",
          "when": "controllerId == 'goExp'",
          "group": "inline"
        }
      ],
      "editor/title": [
        {
          "command": "goExp.browser.back",
          "group": "navigation@1",
          "when": "activeWebviewPanelId == 'goExp.browser'"
        },
        {
          "command": "goExp.browser.refresh",
          "group": "navigation@2",
          "when": "activeWebviewPanelId == 'goExp.browser'"
        },
        {
          "command": "goExp.browser.forward",
          "group": "navigation@3",
          "when": "activeWebviewPanelId == 'goExp.browser'"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "yarn run copy-extras && yarn run check-types && yarn run lint && node esbuild.js",
    "watch": "yarn run copy-extras && npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --watch --project tsconfig.json",
    "watch:tests": "tsc -p . -w --outDir out",
    "copy-extras": "copyfiles -u 1 webview/**/* dist/webview/",
    "package": "yarn run check-types && yarn run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "~16.x",
    "@types/vscode": "~1.75.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "copyfiles": "^2.4.1",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "expect": "^29.7.0",
    "gts": "^5.3.1",
    "jest": "^29.7.0",
    "moment": "^2.30.1",
    "npm-run-all": "^4.1.5",
    "semver": "^7.6.3",
    "ts-jest": "^29.2.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5",
    "vscode-languageserver-types": "^3.17.5"
  },
  "dependencies": {
    "@types/deep-equal": "^1.0.4",
    "@vscode/vsce": "^3.1.0",
    "axios": "^1.7.7",
    "deep-equal": "^2.2.3",
    "minimatch": "^10.0.1",
    "node-html-parser": "^6.1.13",
    "tree-kill": "^1.2.2"
  }
}
